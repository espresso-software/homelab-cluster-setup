name: k3s cluster middleware

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: 'The cluster to run the playbook against'
        required: true
        type: choice
        options:
          - test-k3s
          - game-k3s
          - all
      tags:
        description: 'The tags to run'
        type: choice
        options:
          - all
          - calico
          - metallb
          - longhorn
          - cert-manager
          - traefik
          - pihole
      extra_vars:
        description: 'Extra vars to pass to the playbook'
        required: false
        default: ''

jobs:
  cillium:
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'cilluim'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: cillium
          vars: ${{ github.event.inputs.extra_vars }}
  
  metallb:
    needs: 
      - cillium
    if: |
      always() && 
      (
        needs.cillium.result == 'success' ||
        needs.cillium.result == 'skipped'
      ) && (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'metallb'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: metallb
          vars: ${{ github.event.inputs.extra_vars }}
  
  longhorn:
    needs:
      - metallb
    if: |
      always() && 
      (
        needs.metallb.result == 'success' ||
        needs.metallb.result == 'skipped'
      ) && (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'longhorn'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: longhorn
          vars: ${{ github.event.inputs.extra_vars }}
  
  cert-manager:
    needs:
      - longhorn
    if: |
      always() && 
      (
        needs.longhorn.result == 'success' ||
        needs.longhorn.result == 'skipped'
      ) && (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'cert-manager'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: cert-manager
          vars: ${{ github.event.inputs.extra_vars }}
  
  traefik:
    needs:
      - cert-manager
    if: |
      always() && 
      (
        needs.cert-manager.result == 'success' ||
        needs.cert-manager.result == 'skipped'
      ) && (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'traefik'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: traefik
          vars: ${{ github.event.inputs.extra_vars }}
  
  pihole:
    needs:
      - traefik
    if: |
      always() && 
      (
        needs.traefik.result == 'success' ||
        needs.traefik.result == 'skipped'
      ) && (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'pihole'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: pihole
          vars: ${{ github.event.inputs.extra_vars }}