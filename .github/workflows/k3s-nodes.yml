name: k3s Install

on:
  workflow_dispatch:
    inputs:
      cluster:
        description: 'The cluster to run the playbook against'
        required: true
        type: choice
        options:
          - test-k3s
          - game-k3s
          - all
      tags:
        description: 'The tags to run'
        required: true
        type: choice
        options:
          - all
          - server
          - agent
          - haproxy
          - prereq
          - init-managers
          - init-workers
          - cluster-config
          - helm
      extra_vars:
        description: 'Extra vars to pass to the playbook'
        required: false
        default: ''

jobs:
  haproxy:
    if: |
      github.event.inputs.tags == '' ||
      contains(github.event.inputs.tags, 'haproxy') ||
      contains(github.event.inputs.tags, 'server') ||
      contains(github.event.inputs.tags, 'agent')
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-nodes.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: haproxy
          vars: ${{ github.event.inputs.extra_vars }}

  prereq:
    needs: 
      - haproxy
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'prereq' ||
      github.event.inputs.tags == 'server' ||
      github.event.inputs.tags == 'agent'
    runs-on: 
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}

      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-nodes.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: haproxy,prereq
          vars: ${{ github.event.inputs.extra_vars }}
  
  init-managers:
    needs:
      - prereq
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'init-managers' ||
      github.event.inputs.tags == 'server' ||
      github.event.inputs.tags == 'agent'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}

      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-helm.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: init-managers
          vars: ${{ github.event.inputs.extra_vars }}
  
  init-workers:
    needs:
      - init-managers
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'init-workers' ||
      github.event.inputs.tags == 'agent'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-nodes.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: init-workers
          vars: ${{ github.event.inputs.extra_vars }}
  
  cluster-config:
    needs:
      - init-managers
      - init-workers
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'cluster-config' ||
      github.event.inputs.tags == 'server' ||
      github.event.inputs.tags == 'agent'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with: 
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with: 
          playbook_path: k3s-middleware.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: cluster-config
          vars: ${{ github.event.inputs.extra_vars }}
  
  helm:
    needs:
      - init-managers
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'helm' ||
      github.event.inputs.tags == 'server'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-helm.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.cluster }}
          tags: all
          vars: ${{ github.event.inputs.extra_vars }}