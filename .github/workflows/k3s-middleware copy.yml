# This is a basic workflow to help you get started with Actions

name: k3s cluster monitoring

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      host:
        description: "The host to run the playbook on"
        type: choice
        options:
          - test-k3s
          - game-k3s
          - all
      tags:
        description: "The tags to run"
        type: choice
        options:
          - all
          - node-exporter
          - prometheus
          - loki
          - grafana
      extra_vars:
        description: "Extra vars to pass to the playbook"
        required: false
        default: ""

jobs:
  node-exporter:
    if: |
      github.event.inputs.tags == 'all' ||
      github.event.inputs.tags == 'node-exporter'
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-monitoring.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.host }}
          tags: node-exporter
          vars: ${{ github.event.inputs.extra_vars }}
  prometheus:
    needs:
      - node-exporter
    if: |
      always() &&
      (
        needs.node-exporter.result == 'success' ||
        needs.node-exporter.result == 'skipped'
      ) &&
      (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'prometheus'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-monitoring.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.host }}
          tags: prometheus
          vars: ${{ github.event.inputs.extra_vars }}
  loki:
    needs:
      - prometheus
    if: |
      always() &&
      (
        needs.prometheus.result == 'success' ||
        needs.prometheus.result == 'skipped'
      ) &&
      (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'loki'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-monitoring.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.host }}
          tags: loki
          vars: ${{ github.event.inputs.extra_vars }}
  grafana:
    needs:
      - loki
    if: |
      always() &&
      (
        needs.loki.result == 'success' ||
        needs.loki.result == 'skipped'
      ) &&
      (
        github.event.inputs.tags == 'all' ||
        github.event.inputs.tags == 'grafana'
      )
    runs-on:
      - self-hosted
      - ansible
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
          token: ${{ secrets.READ_ACCESS_TOKEN }}
      - uses: espresso-software/actions/ansible/run-playbook@main
        env:
          VAULT_DECRYPT_TOKEN: ${{ secrets.VAULT_DECRYPT_TOKEN }}
        with:
          playbook_path: k3s-monitoring.yml
          inventory_path: inventory/hosts.yml
          hosts: ${{ github.event.inputs.host }}
          tags: grafana
          vars: ${{ github.event.inputs.extra_vars }}
