---
- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes

- name: Perform safe upgrade
  ansible.builtin.apt:
    upgrade: yes

- name: Perform auto-remove
  ansible.builtin.apt:
    autoremove: yes

- name: Perform docker cleanup
  ansible.builtin.shell: docker system prune -f

- name: Perform k3s cleanup
  ansible.builtin.shell: crictl rmi --prune

- name: Check if /var/run/reboot-required exists
  ansible.builtin.stat: 
    path: /var/run/reboot-required
  register: reboot_required

- name: Reboot if required
  when: reboot_required.stat.exists
  vars:
    node: "{{ ansible_hostname }}"
  environment:
    KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
  block:
    - name: Cordon node
      delegate_to: "{{ groups['k3s_managers'][0] }}"
      ansible.builtin.command:
        cmd: kubectl drain --ignore-daemonsets --delete-emptydir-data --timeout=0 {{ node }}

    - name: Reboot
      ansible.builtin.reboot:
        msg: "[ANSIBLE] Rolling restart"
        post_reboot_delay: 60

    - name: Wait for all k8s nodes to be ready
      environment:
        KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
      delegate_to: "{{ groups['k3s_managers'][0] if ansible_hostname != groups['k3s_managers'][0] else groups['k3s_managers'][1] }}"
      ansible.builtin.shell: kubectl wait --for=condition=Ready nodes --all --timeout=30s
      changed_when: false
      retries: 50
      delay: 15

    - name: Uncordon node
      delegate_to: "{{ groups['k3s_managers'][0] }}"
      environment:
        KUBECONFIG: "/etc/rancher/k3s/k3s.yaml"
      kubernetes.core.k8s_drain:
        name: "{{ node }}"
        state: uncordon