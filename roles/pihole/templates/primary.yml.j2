apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: primary-etc-pihole
  namespace: {{ pihole_namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "3Gi"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: primary-etc-dnsmasq-d
  namespace: {{ pihole_namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: "3Gi"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: primary-config
  namespace: {{ pihole_namespace }}
data:
  TZ: America/Los_Angeles
  VIRTUAL_HOST: "{{ dns.primary_pihole }}"
  PROXY_LOCATION: "pi.hole"
  FTL_CONF_LOCAL_IPV4: "127.0.0.1"
---
apiVersion: v1
kind: Service
metadata:
  name: primary-dns-tcp
  namespace: {{ pihole_namespace }}
  annotations:
    metallb.universe.tf/allow-shared-ip: "pihole-dns"
    metallb.universe.tf/loadBalancerIPs: "{{ network.dns1 }}"
spec:
  selector:
    app: pihole
    version: primary
  ports:
    - name: dns-tcp
      port: 53
      targetPort: 53
      protocol: TCP
    - name: dns-udp
      port: 53
      targetPort: 53
      protocol: UDP
  type: LoadBalancer
  externalTrafficPolicy: Local
---
apiVersion: v1
kind: Service
metadata:
  name: primary-http
  namespace: {{ pihole_namespace }}
spec:
  selector:
    app: pihole
    version: primary
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: primary
  namespace: {{ pihole_namespace }}
  labels:
    app: pihole
    namespace: {{ pihole_namespace }}
    version: primary
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: letsencrypt-prod
    cert-manager.io/duration: 2160h
    cert-manager.io/renew-before: 360h
spec:
  rules:
    - host: "{{ dns.primary_pihole }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: primary-http
                port:
                  number: 80
  tls:
    - hosts:
        - "{{ dns.primary_pihole }}"
      secretName: pihole-tls
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: primary
  namespace: {{ pihole_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
      version: primary
  template:
    metadata:
      labels:
        app: pihole
        version: primary
    spec:
      nodeSelector:
        kubernetes.io/role: worker
      strategy:
        type: Recreate
      containers:
        - name: pihole
          image: pihole/pihole:{{ version | default("latest") }}
          envFrom:
            - configMapRef:
                name: primary-config
          env:
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: WEBPASSWORD
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "2"
          volumeMounts:
            - name: primary-etc-pihole
              mountPath: /etc/pihole
            - name: primary-etc-dnsmasq-d
              mountPath: /etc/dnsmasq.d
      volumes:
        - name: primary-etc-pihole
          persistentVolumeClaim:
            claimName: primary-etc-pihole
        - name: primary-etc-dnsmasq-d
          persistentVolumeClaim:
            claimName: primary-etc-dnsmasq-d
---
apiVersion: v1
kind: CronJob
metadata:
  name: pihole-sync
  namespace: {{ pihole_namespace }}
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        {{ sync_job_template }}