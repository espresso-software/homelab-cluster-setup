---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: secondary-etc-pihole
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: secondary-etc-dnsmasq-d
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# reuse pihole-config
---
apiVersion: v1
kind: Service
metadata:
  name: secondary-dns-tcp
  namespace: pihole
spec:
  selector:
    app: pihole
    version: secondary
  ports:
    - name: dns
      port: 53
      targetPort: 53
      nodePort: 53
      protocol: TCP
  type: nodePort
---
apiVersion: v1
kind: Service
metadata:
  name: secondary-dns-udp
  namespace: pihole
spec:
  selector:
    app: pihole
    version: secondary
  ports:
    - name: dns
      port: 53
      targetPort: 53
      nodePort: 53
      protocol: UDP
  type: nodePort
---
apiVersion: v1
kind: Service
metadata:
  name: secondary-http
  namespace: pihole
spec:
  selector:
    app: pihole
    version: secondary
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: secondary
  namespace: pihole
  labels:
    app: pihole
    namespace: pihole
    version: secondary
spec:
  rules:
    - host: "{{ dns.secondary_pihole }}"
      http:
        path: /
        pathType: Prefix
        backend:
          service:
            name: secondary-http
            port:
              number: 80
  tls:
    - hosts:
        - "{{ dns.secondary_pihole }}"
      secretName: secondary-tls
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: secondary
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
      version: secondary
  serviceName: secondary
  template:
    metadata:
      labels:
        app: pihole
        version: secondary
    spec:
      nodeSelector:
        kubernetes.io/role: infra
      containers:
        - name: pihole
          image: "{{ pihole_image }}"
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: pihole-config
          env:
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-secrets
                  key: WEBPASSWORD
          ports:
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
            - containerPort: 80
              name: http
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 1000m
              memory: 256Mi
          volumeMounts:
            - name: etc-pihole
              mountPath: /etc/pihole
            - name: etc-dnsmasq-d
              mountPath: /etc/dnsmasq.d
      volumes:
        - name: etc-pihole
          persistentVolumeClaim:
            claimName: secondary-etc-pihole
        - name: etc-dnsmasq-d
          persistentVolumeClaim:
            claimName: secondary-etc-dnsmasq-d