---
- name: Add Prometheus Helm Charts
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts
    state: present

- name: Create temporary values file
  ansible.builtin.tempfile:
    suffix: '.yml'
  register: values_file

- name: Template Prometheus values file
  ansible.builtin.template:
    src: "templates/overrides.prometheus.j2"
    dest: "{{ values_file.path }}"

- name: Create temporary alerts file
  ansible.builtin.tempfile:
    suffix: '.yaml'
  register: alerts_file

- name: Copy Prometheus alerts file
  ansible.builtin.copy:
    src: "files/alerts.prometheus.yaml"
    dest: "{{ alerts_file.path }}"

- name: Create temporary Game values file
  ansible.builtin.tempfile:
    suffix: '.yml'
  register: game_values_file

- name: Template Game values file
  ansible.builtin.template:
    src: "templates/overrides.game-prometheus.j2"
    dest: "{{ game_values_file.path }}"

- name: Create Monitoring namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: monitoring

- name: Create Monitoring LimitRange
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: LimitRange
      metadata:
        name: monitoring-limits
        namespace: monitoring
      spec:
        limits:
          - default:
              memory: 256Mi
              cpu: 500m
            defaultRequest:
              memory: 128Mi
              cpu: 100m
            max:
              cpu: 2000m
              memory: 4Gi
            min:
              cpu: 10m
              memory: 1Mi
            type: Container

- name: Deploy Prometheus
  kubernetes.core.helm:
    name: prometheus
    chart_ref: prometheus-community/prometheus
    release_namespace: monitoring
    release_name: prometheus
    state: present
    values_files:
      - "{{ values_file.path }}"
      - "{{ alerts_file.path }}"

- name: Create Prometheus Network Policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumNetworkPolicy
      metadata:
        name: prometheus-network-policy
        namespace: monitoring
      spec:
        endpointSelector:
          matchLabels:
            app.kubernetes.io/instance: prometheus
        ingress:
          - fromEndpoints:
              - matchLabels:
                  app.kubernetes.io/instance: prometheus
        egress:
          - toEndpoints:
              - {}

- name: Create Traefik -> Prometheus Network Policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumNetworkPolicy
      metadata:
        name: traefik-prometheus-network-policy
        namespace: monitoring
      spec:
        endpointSelector:
          matchLabels:
            app.kubernetes.io/name: traefik
        egress:
          - toEndpoints:
              - matchLabels:
                  app.kubernetes.io/component: server

- name: Create Prometheus -> Kubesystem Network Policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumNetworkPolicy
      metadata:
        name: prometheus-kubesystem-network-policy
        namespace: monitoring
      spec:
        endpointSelector:
          matchLabels:
            app.kubernetes.io/instance: prometheus
            app.kubernetes.io/name: kube-state-metrics
        egress:
          - toEntities:
              - kube-apiserver

- name: Deploy Game Server Prometheus
  kubernetes.core.helm:
    name: game-prometheus
    chart_ref: prometheus-community/prometheus
    release_namespace: monitoring
    release_name: game-prometheus
    state: present
    values_files:
      - "{{ game_values_file.path }}"

- name: Create Game Server Prometheus Network Policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumNetworkPolicy
      metadata:
        name: game-prometheus-network-policy
        namespace: monitoring
      spec:
        endpointSelector:
          matchLabels:
            app.kubernetes.io/instance: game-prometheus
        ingress:
          - fromEndpoints:
              - matchLabels:
                  app.kubernetes.io/instance: game-prometheus
        egress:
          - toEndpoints:
              - matchLabels:
                  app.kubernetes.io/instance: game-prometheus

- name: Create Game Server Prometheus -> Games Network Policy
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumNetworkPolicy
      metadata:
        name: game-prometheus-games-network-policy
        namespace: monitoring
      spec:
        endpointSelector:
          matchLabels:
            app.kubernetes.io/instance: game-prometheus
        egress:
          - toServices:
              - k8sServiceSelector:
                  selector:
                    matchLabels:
                      game: minecraft
                  namespace: games