---
- name: Check if Cilium CLI is installed
  ansible.builtin.command:
    cmd: cilium version
  register: cilium_cli_check
  ignore_errors: true

- name: Install Cilium CLI
  changed_when: false
  failed_when: false
  when: cilium_cli_check.rc != 0
  ansible.builtin.script:
    cmd: cilium-install.sh
    executable: /bin/bash

- name: Update helm chart
  run_once: true
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: https://helm.cilium.io/
    state: present

- name: Create temporary values file for Cilium
  ansible.builtin.tempfile:
    suffix: '.yaml'
  register: cilium_values_file

- name: Template Cilium values file
  ansible.builtin.template:
    src: "templates/values.j2"
    dest: "{{ cilium_values_file.path }}"

- name: Deploy Cilium with helm
  run_once: true
  kubernetes.core.helm:
    name: cilium
    state: present
    namespace: kube-system
    chart_ref: cilium/cilium
    values_files:
      - "{{ cilium_values_file.path }}"

- name: Wait for Cilium to be ready
  run_once: true
  changed_when: false
  ansible.builtin.command:
    cmd: cilium status --wait

- name: Deploy Cluster Wide Default Deny
  run_once: true
  environment:
    NO_PROXY: "{{ no_proxy }}"
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-deny-all
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - monitoring
                - default
                - cloudflare
                - traefik-system
        ingress:
          - {}
        egress:
          - {}

- name: Default DNS allow
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-allow-dns
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - default
                - monitoring
                - cloudflare
                - traefik-system

        egress:
          - toEndpoints:
              - matchLabels:
                  k8s-app: kube-dns
            toPorts:
              - ports:
                  - port: "53"
                    protocol: UDP
                  - port: "53"
                    protocol: TCP
          - toCIDR:
              - 1.1.1.1/32
              - 1.0.0.1/32
            toPorts:
              - ports:
                  - port: "53"
                    protocol: UDP
                  - port: "53"
                    protocol: TCP

- name: Default Internet Proxy allow
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-allow-internet-proxy
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - monitoring
                - default
                - cloudflare
                - traefik-system
        egress:
          - toCIDR:
              - 10.24.206.0/24
              - 10.25.206.0/24
            toPorts:
              - ports:
                  - port: "80"
                    protocol: TCP
                  - port: "443"
                    protocol: TCP
                  - port: "3128"
                    protocol: TCP
