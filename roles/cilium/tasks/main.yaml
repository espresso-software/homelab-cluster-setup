---
# - name: Install Cilium CLI
#   ansible.builtin.script:
#     cmd: cilium-install.sh
#     executable: /bin/bash

- name: Update helm chart
  run_once: true
  kubernetes.core.helm_repository:
    name: cilium
    repo_url: https://helm.cilium.io/
    state: present

- name: Deploy Cilium with helm
  run_once: true
  kubernetes.core.helm:
    name: cilium
    state: present
    namespace: kube-system
    chart_ref: cilium/cilium
    values:
      kubeConfigPath: "{{ kube_config_path }}"
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 125m
          memory: 256Mi
      rolloutCiliumPods: 'true'
      cluster:
        name: "{{ cluster_name }}"
      encryption:
        enabled: true
        type: "wireguard"
        nodeEncryption: true
      envoy:
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
      operator:
        nodeSelector:
          kubernetes.io/os: linux
          node-role.kubernetes.io/control-plane: 'true'
        resources:
          requests:
            cpu: 50m
      ipam:
        operator:
          clusterPoolIPv4PodCIDRList:
            - "{{ cluster_cidr }}"
      hubble:
        metrics:
          enableOpenMetrics: true
          enabled: "{dns,drop,tcp,flow,port-distribution,icmp,httpV2:exemplars=true;labelsContext=source_ip\\,source_namespace\\,source_workload\\,destination_ip\\,destination_namespace\\,destination_workload\\,traffic_direction}"
        redact:
          enabled: true
        relay:
          enabled: true
        ui:
          enabled: true
          ingress:
            enabled: true
            hosts:
              - hubble.{{ cluster_domain }}
            tls:
              - secretName: hubble-ui-tls
                hosts:
                  - hubble.{{ cluster_domain }}

# - name: Wait for Cilium to be ready
#   run_once: true
#   ansible.builtin.command:
#     cmd: cilium status --wait

# - name: Test Cilium connectivity
#   run_once: true
#   ansible.builtin.command:
#     cmd: cilium connectivity test
#   register: cilium_connectivity_test
#   failed_when: cilium_connectivity_test.rc != 0

- name: Deploy Cluster Wide Default Deny
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-deny-all
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - cilium-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - monitoring
                - default
                - cloudflare
        ingress:
          - {}
        egress:
          - {}

- name: Default DNS allow
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-allow-dns
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - cilium-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - default
                - monitoring
                - cloudflare
        egress:
          - toEndpoints:
              - matchLabels:
                  k8s-app: kube-dns
            toPorts:
              - ports:
                  - port: "53"
                    protocol: UDP
                  - port: "53"
                    protocol: TCP
          - toCIDR:
              - 1.1.1.1/32
              - 1.0.0.1/32
            toPorts:
              - ports:
                  - port: "53"
                    protocol: UDP
                  - port: "53"
                    protocol: TCP

- name: Default Internet Proxy allow
  run_once: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cilium.io/v2
      kind: CiliumClusterwideNetworkPolicy
      metadata:
        name: default-allow-internet-proxy
      spec:
        endpointSelector:
          matchExpressions:
            - key: "io.kubernetes.pod.namespace"
              operator: NotIn
              values:
                - kube-system
                - cilium-system
                - metallb-system
                - longhorn-system
                - cert-manager
                - monitoring
                - default
                - cloudflare
        egress:
          - toCIDR:
              - 10.24.206.0/24
              - 10.25.206.0/24
            toPorts:
              - ports:
                  - port: "80"
                    protocol: TCP
                  - port: "443"
                    protocol: TCP
                  - port: "3128"
                    protocol: TCP
