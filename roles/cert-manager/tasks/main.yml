---
- name: Add Helm repository
  kubernetes.core.helm_repository:
    name: jetstack
    repo_url: https://charts.jetstack.io
    state: present

- name: Create {{ cert_manager_namespace }} namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ cert_manager_namespace }}"

#TODO: -name: Create LimitRange

#TODO: -name: Create ResourceQuota

- name: Create temporary values file for Cert Manager
  ansible.builtin.tempfile:
    suffix: '.yaml'
  register: cert_manager_values_file

- name: Template Cert Manager values file
  ansible.builtin.template:
    src: "templates/values.j2"
    dest: "{{ cert_manager_values_file.path }}"

# FIXME: needs a longer timeout to install properly
- name: Install cert-manager
  kubernetes.core.helm:
    name: cert-manager
    namespace: "{{ cert_manager_namespace }}"
    chart_ref: jetstack/cert-manager
    chart_version: v1.15.2
    values_files:
      - "{{ cert_manager_values_file.path }}"

- name: Create Cloudflare API Token Secret
  no_log: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cloudflare-api-token
        namespace: "{{ cert_manager_namespace }}"
      type: Opaque
      stringData:
        api-token: "{{ cloudflare_token }}"

- name: Create ClusterIssuer (Staging)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-staging
      spec:
        acme:
          email: "tyfoster@outlook.com"
          privateKeySecretRef:
            name: letsencrypt-staging
          server: https://acme-staging-v02.api.letsencrypt.org/directory
          solvers:
            - dns01:
                cloudflare:
                  apiTokenSecretRef:
                    name: cloudflare-api-token
                    key: api-token
              selector:
                dnsZones:
                  - "{{ local_domain }}"
                  - "{{ domain }}"
                  - "{{ cluster_domain }}"

- name: Create ClusterIssuer (Production)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: letsencrypt-prod
      spec:
        acme:
          email: "tyfoster@outlook.com"
          privateKeySecretRef:
            name: letsencrypt-prod
          server: https://acme-v02.api.letsencrypt.org/directory
          solvers:
            - dns01:
                cloudflare:
                  apiTokenSecretRef:
                    name: cloudflare-api-token
                    key: api-token
              selector:
                dnsZones:
                  - "{{ local_domain }}"
                  - "{{ domain }}"
                  - "{{ cluster_domain }}"
