deploymentMode: SimpleScalable

loki:
  #FIXME: Enable auth
  auth_enabled: false
  schemaConfig:
    configs:
      - from: "2025-01-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  querier:
    # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
    max_concurrent: 4
  pattern_ingester:
    enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true

lokiCanary:
  nodeSelector:
    kubernetes.io/role: worker
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

gateway:
  replicas: 2
  resources:
    limits:
      cpu: 500m
      memory: 512Gi
    requests:
      cpu: 100m
      memory: 128Mi
  nodeSelector:
    kubernetes.io/role: worker
  service:
    type: LoadBalancer
    annotations:
      metallb.universe.tf/allow-shared-ip: "loki"
      metallb.universe.tf/loadBalancerIps: "{{ network.loki }}"

write:
  replicas: 3 # To ensure data durability with replication
  nodeSelector:
    kubernetes.io/role: worker
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

read:
  replicas: 3
  nodeSelector:
    kubernetes.io/role: worker
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

backend:
  replicas: 3
  nodeSelector:
    kubernetes.io/role: worker
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

#TODO: MULTI-CLUSTER - run separate minio in DB cluster for each cluster (external, tools, monitoring, test, and data)
# Enable minio for storage
minio:
  enabled: true
  nodeSelector:
    kubernetes.io/role: worker
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 128Mi

# Zero out replica counts of other deployment modes
singleBinary:
  replicas: 0

ingester:
  replicas: 0
querier:
  replicas: 0
queryFrontend:
  replicas: 0
queryScheduler:
  replicas: 0
distributor:
  replicas: 0
compactor:
  replicas: 0
indexGateway:
  replicas: 0
bloomCompactor:
  replicas: 0
bloomGateway:
  replicas: 0