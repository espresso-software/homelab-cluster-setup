---
# TODO: Move to role
# - name: Deploy Dashboard
#   hosts: k3s_managers
#   become: yes
#   environment:
#     KUBECONFIG: "{{ kube_config_path }}"
#     K8S_AUTH_NO_PROXY: "{{ no_proxy }}"
#   tags:
#     - dashboard
#     - kubernetes
#   tasks:
#     - name: Add helm chart
#       kubernetes.core.helm_repository:
#         url: https://kubernetes.github.io/dashboard/
#         name: kubernetes-dashboard

#     - name: Create Kubernetes Dashboard Namespace
#       kubernetes.core.k8s:
#         state: present
#         definition:
#           apiVersion: v1
#           kind: Namespace
#           metadata:
#             name: kubernetes-dashboard

#     - name: Create Kubernetes Dashboard LimitRange
#       kubernetes.core.k8s:
#         state: present
#         definition:
#           apiVersion: v1
#           kind: LimitRange
#           metadata:
#             name: dashboard-limits
#             namespace: kubernetes-dashboard
#           spec:
#             limits:
#               - default:
#                   memory: 512Mi
#                   cpu: 250m
#                 defaultRequest:
#                   memory: 256Mi
#                   cpu: 100m
#                 type: Container

#     - name: Create Kubernetes Dashboard ResourceQuota
#       kubernetes.core.k8s:
#         state: present
#         definition:
#           apiVersion: v1
#           kind: ResourceQuota
#           metadata:
#             name: dashboard-quota
#             namespace: kubernetes-dashboard
#           spec:
#             hard:
#               requests.cpu: "2"
#               requests.memory: 4Gi
#               limits.cpu: "4"
#               limits.memory: 8Gi

#     #TODO: determine proxy requests and limits
#     - name: Deploy
#       run_once: true
#       kubernetes.core.helm:
#         name: dashboard
#         chart_ref: kubernetes-dashboard/kubernetes-dashboard
#         release_namespace: kubernetes-dashboard
#         create_namespace: yes
#         values:
#           app:
#             scheduling:
#               nodeSelector:
#                 kubernetes.io/role: worker
#             ingress:
#               enabled: false
#           web:
#             containers:
#               args: []
#             scheduling:
#               nodeSelector:
#                 kubernetes.io/role: worker

#     - name: Use MetalLB for Service
#       run_once: true
#       kubernetes.core.k8s:
#         state: present
#         definition:
#           apiVersion: v1
#           kind: Service
#           metadata:
#             name: dashboard-kong-proxy
#             namespace: kubernetes-dashboard
#             annotations:
#               metallb.universe.tf/address-pool: prod
#           spec:
#             type: LoadBalancer
#             ports:
#               - name: kong-proxy-tls
#                 port: 443
#                 targetPort: 8443
#                 protocol: TCP

#     - name: Create Service Account Levels
#       run_once: true
#       vars:
#         service_accounts:
#           - name: dashboard-admin
#             role: cluster-admin
#           - name: dashboard-editor
#             role: edit
#           - name: dashboard-viewer
#             role: view
#       block:
#         - name: Create Service Account
#           with_items: "{{ service_accounts }}"
#           kubernetes.core.k8s:
#             definition:
#               apiVersion: v1
#               kind: ServiceAccount
#               metadata:
#                 name: "{{ item.name }}"
#                 namespace: kubernetes-dashboard

#         - name: Create Cluster Role Binding
#           with_items: "{{ service_accounts }}"
#           kubernetes.core.k8s:
#             definition:
#               apiVersion: rbac.authorization.k8s.io/v1
#               kind: ClusterRoleBinding
#               metadata:
#                 name: "{{ item.name }}"
#               roleRef:
#                 apiGroup: rbac.authorization.k8s.io
#                 kind: ClusterRole
#                 name: "{{ item.role }}"
#               subjects:
#                 - kind: ServiceAccount
#                   name: "{{ item.name }}"
#                   namespace: kubernetes-dashboard

- name: Deploy Node Exporter
  hosts: all:!k3s
  gather_facts: true
  become: true
  tags:
    - node-exporter
  roles:
    - node-exporter

- name: Deploy Prometheus Stack
  hosts: k3s_managers
  gather_facts: true
  run_once: true
  become: true
  tags:
    - prometheus
    - kubernetes
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
    K8S_AUTH_NO_PROXY: "{{ no_proxy }}"
  roles:
    - prometheus

- name: Deploy Loki Stack
  hosts: k3s_managers
  gather_facts: true
  run_once: true
  become: true
  tags:
    - loki
    - kubernetes
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
    K8S_AUTH_NO_PROXY: "{{ no_proxy }}"
  roles:
    - loki

- name: Deploy Grafana Stack
  hosts: k3s_managers
  gather_facts: true
  run_once: true
  become: true
  tags:
    - grafana
    - kubernetes
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
    K8S_AUTH_NO_PROXY: "{{ no_proxy }}"
  roles:
    - grafana
