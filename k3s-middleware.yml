---
- name: Install Calico
  hosts: k3s_managers
  become: yes
  run_once: true
  gather_facts: true
  tags:
    - calico
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - calico

- name: Add MetalLB VLAN
  hosts: k3s
  become: yes
  tags:
    - metallb
  handlers:
    - name: netplan apply
      ansible.builtin.command: netplan apply
  tasks:
    - name: Create netplan config
      ansible.builtin.copy:
        dest: /etc/netplan/75-netcfg.yaml
        content: |
          network:
            version: 2
            ethernets:
              {{ ethernet.device }}:
                dhcp4: no
            vlans:
              vlan{{ vip_vlan_id }}:
                id: {{ vip_vlan_id }}
                link: {{ ethernet.device }}
                routes:
                  - to: default
                    via 10.{{ vlan_id }}.0.1
                nameservers:
                  addresses:
                    - 10.{{ vlan_id }}.0.1
                    - 1.1.1.1
                    - 1.0.0.1
      notify: netplan apply

- name: Install MetalLB
  hosts: k3s_managers
  become: yes
  run_once: true
  tags:
    - metallb
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - metallb

- name: Longhorn prereqs
  hosts: k3s
  become: yes
  tags:
    - nfs
    - longhorn
  tasks:
    - name: Install NFS
      ansible.builtin.apt:
        name: nfs-common
        state: present
    - name: Create default multipath.conf
      ansible.builtin.copy:
        dest: /etc/multipath.conf
        content: |
          defaults {
            user_friendly_names yes
          }
          blacklist {
            devnode "^sd[a-z0-9]+"
          }
      register: multipath_conf
    - name: Reload multipathd
      ansible.builtin.systemd:
        name: multipathd
        state: restarted
      when: multipath_conf.changed

- name: Install Longhorn
  hosts: k3s_managers
  run_once: true
  become: yes
  tags:
    - longhorn
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - longhorn

- name: Install cert-manager
  hosts: k3s_managers
  become: yes
  run_once: true
  tags:
    - cert-manager
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - cert-manager

- name: Install Traefik
  hosts: k3s_managers
  become: yes
  run_once: true
  tags:
    - traefik
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - traefik

- name: Install Pi-hole
  hosts: k3s_managers
  become: yes
  run_once: true
  tags:
    - pihole
  environment:
    KUBECONFIG: "{{ kube_config_path }}"
  roles:
    - pihole
